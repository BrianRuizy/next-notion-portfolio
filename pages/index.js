import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import Header from "../components/header";

import { Fragment } from "react"
import { Menu, Transition } from "@headlessui/react"

function classNames(...classes) {
  return classes.filter(Boolean).join(" ")
}


import { getAllPublished } from '../lib/notion';
import Link from 'next/link';

export default function Home({posts}) {
  if(!posts) return <h1>No posts</h1>

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="px-6 flex flex-col gap-6">
         <Header />
          
          <div id="content" className="container max-w-7xl mx-auto flex flex-col gap-8 md:gap-12">
            <div id="about" className="flex gap-6 flex-wrap">
              <div className="bg-neutral-200 dark:bg-neutral-900 min-h-[20rem] rounded-2xl md:rounded-3xl p-6 md:p-8 grow">
                <h2 className="text-2xl font-bold">Card 1</h2>
                <p className="text-gray-500">Lorem ipsum dolor sit amet.</p>
              </div>
              <div className="bg-neutral-200 dark:bg-neutral-900 min-h-[20rem] rounded-2xl md:rounded-3xl p-6 md:p-8 min-w-[20%] w-full md:w-2/5">
                <h2 className="text-2xl font-bold">Card 2</h2>
                <p className="text-neutral-500">Lorem ipsum dolor sit amet.</p>
              </div>
            </div>

            <section>
              <h2 className="text-2xl font-bold">Case Studies</h2>
              <p className="text-neutral-400 text-base -mt-1 mb-3">A more in-depth look.</p>
              <div id="posts" className="grid grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6 flex-wrap">
                { posts.map((post, index) => (
                  // only if post category is case study
                  ( post.category === "Case Study" ? (
                    <div key={index} className="bg-neutral-200 dark:bg-neutral-900 min-h-[32rem] rounded-2xl md:rounded-3xl p-6 col-span-2 md:col-span-1 overflow-hidden will-change-transform">
                      <div
                        className="z-0 bg-cover bg-center absolute w-full h-full bottom-0 left-0 rounded-2xl md:rounded-3xl hover:scale-95 transition-all duration-1000 ease-in-out dark:brightness-90"
                        style={{backgroundImage: `url(${post.cover})`}}
                      />
                      <div className="z-10 absolute -inset-2 bg-gradient-to-b from-black/25 h-2/6" />
                      <div className="z-20 relative flex flex-col gap-1.5">
                        <div className="flex justify-between gap-4 items-center border-b pb-1 mb-2 border-white/20 "> 
                          <p className="uppercase tracking-tight text-white/80 text-sm font-medium">{post.date}</p>
                          <button type="button" className="text-white/80" aria-label="Arrow up-right">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="w-5 h-5">
                            <path d="M3 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM8.5 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM15.5 8.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z" />
                          </svg>
                          </button>
                        </div>
                        <h2 className="text-3xl font-bold text-white md:pr-2">{post.title}</h2>
                        <p className="text-white/70 text-sm md:text-base line-clamp-2">{post.description}</p>
                      </div>
                    </div>
                  ) : null
                  )

                ))}
              </div>
            </section>

            <section>
              <div className="flex items-center gap-2">
               <img src="../youtube-icon.png" className="w-6"/>
                <h2 className="text-2xl font-bold text-black dark:text-white tracking-tight">YouTube</h2>
              </div>
              <p className="text-neutral-400 text-base -mt-1 mb-3">Watch my latest videos!</p>
              <div id="posts" className="grid grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6 flex-wrap">
                { posts.map((post, index) => (
                  // only if post category is case study
                  ( post.category === "YouTube" ? (

                    <div
                    key={post.slug}
                    className="drop-shadow-md p-4 bg-white dark:bg-neutral-900 divide-neutral-200 dark:divide-neutral-800 divide-y rounded-xl flex flex-col justify-between col-span-2 lg:col-span-1">
                    <div className="flex flex-row-reverse justify-between">
                      <div
                        className="overflow-hidden min-w-[8rem] w-32 h-32 aspect-video m-4 ml-0 overflow-hidden rounded-lg">
                        <img src={post.cover} alt={post.title} class="h-full w-full object-cover object-center"/>
                      </div>
      
                      <a href={post.slug} className="text-black dark:text-white font-bold text-base leading-tight line-clamp-4">{post.title}</a>
                    </div>
                    <div className="px-4 py-1 flex justify-between items-center">
                      <p className="text-xs lg:text-sm font-semibold m-0 text-neutral-400">{post.date}</p>
                      <Menu as="div" className="relative inline-block text-left">
                        <div>
                          <Menu.Button className="text-neutral-400 hover:text-neutral-600 transition duration-200 ease-in-out">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
                            </svg>
                          </Menu.Button>
                        </div>
      
                        <Transition
                          as={Fragment}
                          enter="transition ease-out duration-100"
                          enterFrom="transform opacity-0 scale-95"
                          enterTo="transform opacity-100 scale-100"
                          leave="transition ease-in duration-75"
                          leaveFrom="transform opacity-100 scale-100"
                          leaveTo="transform opacity-0 scale-95"
                        >
                          <Menu.Items className="absolute -right-4 z-10 mt-4 w-56 origin-top-right rounded-lg bg-white/90 backdrop-blur shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                            <div className="py-1 divide-y">
                              <Menu.Item>
                                <a
                                  href="#"
                                  className="text-black px-4 py-2 text-base w-full flex justify-between"
                                >
                                  Share Story
                                  <svg xm lns="http://www.w3.org/2000/svg"fill="none"viewBox="0 0 24 24"strokeWidth={1.5}stroke="currentColor"className="w-6 h-6">
                                    <path strokeLinecap="round"strokeLinejoin="round"d="M9 8.25H7.5a2.25 2.25 0 00-2.25 2.25v9a2.25 2.25 0 002.25 2.25h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25H15m0-3l-3-3m0 0l-3 3m3-3V15"/>
                                  </svg>
                                </a>
                              </Menu.Item>
                              <Menu.Item>
                                <a
                                  href="#"
                                  className="text-black px-4 py-2 text-base w-full flex justify-between"
                                >
                                  Copy Link
                                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
                                    <path strokeLinecap="round"strokeLinejoin="round"d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244"/>
                                  </svg>
                                </a>
                              </Menu.Item>
                            </div>
                          </Menu.Items>
                        </Transition>
                      </Menu>
                    </div>
                  </div>
                  ) : null
                  )

                ))}
              </div>
            </section>

            <section>
              <h2 className="text-2xl font-bold mb-3">Blog Posts</h2>
              <div id="posts" className="grid grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6 flex-wrap">
                { posts.map((post, index) => (
                  // only if post category is case study
                  ( post.category === "Blog" ? (
                    <div key={index} className="bg-neutral-200 dark:bg-neutral-900 min-h-[32rem] rounded-2xl md:rounded-3xl p-6 col-span-2 md:col-span-1 overflow-hidden will-change-transform">
                      <div
                        className="z-0 bg-cover bg-center absolute w-full h-full bottom-0 left-0 rounded-2xl md:rounded-3xl hover:scale-105 transition-all duration-1000 ease-in-out dark:brightness-90"
                        style={{backgroundImage: `url(${post.cover})`}}
                      />
                      <div className="z-10 absolute -inset-2 bg-gradient-to-b from-black/25 h-2/6" />
                      <div className="z-20 relative flex flex-col gap-1.5">
                        <div className="flex justify-between gap-4 items-center border-b pb-1 mb-2 border-white/20 "> 
                          <p className="uppercase tracking-tight text-white/80 text-sm font-medium">{post.date}</p>
                          <button type="button" className="text-white/80" aria-label="Arrow up-right">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="w-5 h-5">
                            <path d="M3 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM8.5 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM15.5 8.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z" />
                          </svg>
                          </button>
                        </div>
                        <h2 className="text-3xl font-bold text-white md:pr-2">{post.title}</h2>
                        <p className="text-white/70 text-sm md:text-base line-clamp-2">{post.description}</p>
                      </div>
                    </div>
                  ) : null
                  )

                ))}
              </div>
            </section>
          
          </div>
        </div>
      </main>
    </>
  );
}

export const getStaticProps = async () => {
  const data = await getAllPublished()

  return {
    props: {
      posts: data,
    },
    revalidate: 60
  };
};